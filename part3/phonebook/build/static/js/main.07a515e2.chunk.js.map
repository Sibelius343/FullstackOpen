{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","handleDel","name","number","type","onClick","People","persons","map","Input","text","value","onChange","AddNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorMessage","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","notification","setNotification","errorMessage","setErrorMessage","useEffect","personService","initialPeople","changeNumber","window","confirm","changedPerson","returnedPerson","setTimeout","filter","p","catch","error","console","log","event","target","onSubmit","preventDefault","existing","toLowerCase","length","personObject","concat","alert","includes","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a515e2.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, update, del}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Person = ({person, handleDel}) => (\n  <>\n    <li>{person.name} {person.number} <button type='button' onClick={() => handleDel(person.id)}>delete</button></li>\n  </>\n)\n\nconst People = ({persons, handleDel}) => (\n  <>\n    <ul>\n      {persons.map(person =>\n        <Person key={person.name} person={person} handleDel={handleDel} /> )} \n    </ul>\n  </>\n)\n\nconst Input = ({text, value, onChange}) => (\n  <>\n    {text}<input value={value} onChange={onChange} />\n  </>\n)\n\nconst AddNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  const notificationStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorMessage = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  const notificationStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  const checkName = () => {\n      return persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existing = checkName()\n    if (existing.length === 0){\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      \n      personService\n        .create(personObject)\n        .then(person => {\n          setPersons(persons.concat(person))\n          setNotification(`Added ${personObject.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          console.log(error.response.data)\n        })\n      \n\n    } else if (existing[0].number !== newNumber) {\n      changeNumber(existing[0])\n    } else {\n      window.alert(`${newName} is already added to phonebook`)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n  \n  const filteredPersons = () => (\n    persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n  )\n\n  const handleDel = id => {\n    const name = persons.find(p => p.id === id).name\n    const result = window.confirm(`Delete ${name}?`)\n    if (result) {\n      personService.del(id)\n      setPersons(persons.filter(person => person.id !== id))  \n    }\n  }\n\n  const changeNumber = (person) => {\n    const result = window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)\n    if (result) {\n      const id = person.id\n      const changedPerson = {...person, number: newNumber}\n      personService\n        .update(person.id, changedPerson)\n        .then(returnedPerson => {\n          if (!returnedPerson){\n            setErrorMessage(\n              `Information of ${changedPerson.name} has already been removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== changedPerson.id))\n          } else {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n        \n          setNotification(`Changed ${changedPerson.name}'s number to ${changedPerson.number}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)}})\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          console.log(error.response.data)\n        })\n      \n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <AddNotification message={notification} />\n      <ErrorMessage message={errorMessage} />\n      <div>\n        <Input text={'filter shown with'} value={newSearch} onChange={handleSearch} />\n      </div>\n      <h2>add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          <Input text={'name: '} value={newName} onChange={handleInputChange} />\n        </div>\n        <div>\n          <Input text={'number: '} value={newNumber} onChange={handleNumberChange} />  \n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <People persons={filteredPersons()} handleDel={handleDel}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}